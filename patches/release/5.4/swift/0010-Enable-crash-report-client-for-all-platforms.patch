diff --git a/utils/build-script-impl b/utils/build-script-impl
index 43f26c42a3c..9e09574895a 100755
--- a/utils/build-script-impl
+++ b/utils/build-script-impl
@@ -1531,12 +1531,11 @@ for host in "${ALL_HOSTS[@]}"; do
         )
     fi
 
-    if [[ "${DARWIN_CRASH_REPORTER_CLIENT}" ]] ; then
-        swift_cmake_options=(
-            "${swift_cmake_options[@]}"
-            -DSWIFT_RUNTIME_CRASH_REPORTER_CLIENT:BOOL=TRUE
-        )
-    fi
+    # Enable runtime crash reporter client for all platforms
+    swift_cmake_options=(
+        "${swift_cmake_options[@]}"
+        -DSWIFT_RUNTIME_CRASH_REPORTER_CLIENT:BOOL=TRUE
+    )
 
     swift_cmake_options=(
         "${swift_cmake_options[@]}"

diff --git a/include/swift/Runtime/Debug.h b/include/swift/Runtime/Debug.h
index f82fee34bc8..932ed29315b 100644
--- a/include/swift/Runtime/Debug.h
+++ b/include/swift/Runtime/Debug.h
@@ -26,6 +26,12 @@
 
 #ifdef SWIFT_HAVE_CRASHREPORTERCLIENT
 
+#ifdef __APPLE__
+#define GCR_ANNOTATIONS_VISIBILITY __attribute__ ((visibility("hidden")))
+#else
+#define GCR_ANNOTATIONS_VISIBILITY __attribute__ ((visibility("default")))
+#endif
+
 #define CRASHREPORTER_ANNOTATIONS_VERSION 5
 #define CRASHREPORTER_ANNOTATIONS_SECTION "__crash_info"
 
@@ -41,7 +47,7 @@ struct crashreporter_annotations_t {
 };
 
 extern "C" {
-SWIFT_RUNTIME_LIBRARY_VISIBILITY
+GCR_ANNOTATIONS_VISIBILITY
 extern struct crashreporter_annotations_t gCRAnnotations;
 }
 
diff --git a/stdlib/public/runtime/Errors.cpp b/stdlib/public/runtime/Errors.cpp
index b5a5e467388..39e4ab4b892 100644
--- a/stdlib/public/runtime/Errors.cpp
+++ b/stdlib/public/runtime/Errors.cpp
@@ -261,7 +261,14 @@ void swift::printCurrentBacktrace(unsigned framesToSkip) {
 }
 
 #ifdef SWIFT_HAVE_CRASHREPORTERCLIENT
+
+#ifdef __APPLE__
 #include <malloc/malloc.h>
+#define MALLOC_SIZE_FUNC malloc_size
+#else
+#include <malloc.h>
+#define MALLOC_SIZE_FUNC malloc_usable_size
+#endif
 
 // Instead of linking to CrashReporterClient.a (because it complicates the
 // build system), define the only symbol from that static archive ourselves.
@@ -269,7 +276,7 @@ void swift::printCurrentBacktrace(unsigned framesToSkip) {
 // The layout of this struct is CrashReporter ABI, so there are no ABI concerns
 // here.
 extern "C" {
-SWIFT_LIBRARY_VISIBILITY
+GCR_ANNOTATIONS_VISIBILITY
 struct crashreporter_annotations_t gCRAnnotations
 __attribute__((__section__("__DATA," CRASHREPORTER_ANNOTATIONS_SECTION))) = {
     CRASHREPORTER_ANNOTATIONS_VERSION, 0, 0, 0, 0, 0, 0, 0};
@@ -291,7 +298,7 @@ reportOnCrash(uint32_t flags, const char *message)
   char *newMessage;
   if (oldMessage) {
     asprintf(&newMessage, "%s%s", oldMessage, message);
-    if (malloc_size(oldMessage)) free(oldMessage);
+    if (MALLOC_SIZE_FUNC(oldMessage)) free(oldMessage);
   } else {
     newMessage = strdup(message);
   }
